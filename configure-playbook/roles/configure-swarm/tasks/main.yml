---

- name: Allow swarm communication through UFW (2377/tcp)
  ufw:
    rule: allow
    from: 10.0.0.0/16
    proto: tcp
    port: '2377'

- name: Allow swarm communication through UFW (7946/any)
  ufw:
    rule: allow
    from: 10.0.0.0/16
    port: '7946'

- name: Allow swarm communication through UFW (4789/udp)
  ufw:
    rule: allow
    from: 10.0.0.0/16
    proto: udp
    port: '4789'

- name: Initialize swarm
  delegate_to: "{{ ansible_play_hosts_all[0] }}"
  community.docker.docker_swarm:
    state: present
  register: swarm_data
  when: ansible_play_hosts_all.index(inventory_hostname) == 0

- name: Get internal IP for swarm nodes to join to
  set_fact:
    swarm_join_ip: "{{ item }}"
  with_items: "{{ ansible_all_ipv4_addresses }}"
  when:
  - ansible_play_hosts_all.index(inventory_hostname) == 0
  - item.startswith('10.0.')

- name: Set variables needed for joining swarm
  ansible.builtin.set_fact:
    join_token: "{{ swarm_data.swarm_facts.JoinTokens.Manager }}"
    remote_addr: "{{ swarm_join_ip }}"
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ ansible_play_hosts_all }} "
  when: ansible_play_hosts_all.index(inventory_hostname) == 0

- name: Join swarm
  community.docker.docker_swarm:
    state: join
    join_token: "{{ join_token }}"
    remote_addrs: [ "{{ remote_addr }}:2377" ]
  when: ansible_play_hosts_all.index(inventory_hostname) != 0

- name: Add node labels
  community.docker.docker_node:
    hostname: "{{ inventory_hostname }}"
    labels:
      nodeid: "{{ ansible_play_hosts_all.index(inventory_hostname) }}"
