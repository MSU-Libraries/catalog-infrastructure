---

- name: Check if user exists
  getent:
    database: passwd
    key: "{{ user_dict.name }}"
    fail_key: no
  when:
  - user_dict.name is defined

- name: Create/update user
  user:
    name: "{{ user_dict.name }}"
    comment: "{{ user_dict.comment }}"
    state: present
    shell: "{{ user_dict.shell | default('/bin/bash') }}"
    groups: "{{ user_dict.groups }}"
    append: yes
  register: created_user
  when:
  - user_dict.name is defined
  - user_dict.comment is defined

- name: Set correct ownership of home directory
  ansible.builtin.file:
    path: "/home/{{ user_dict.name }}"
    state: directory
    owner: "{{ user_dict.name }}"
    group: "{{ user_dict.name }}"
  when:
  - user_dict.name is defined

- name: Remove the blank password for the user
  command: "passwd -d {{ user_dict.name }}"
  when:
  - getent_passwd[user_dict.name] == None
  - created_user.changed
  - user_dict.pw_lock is not defined or user_dict.pw_lock == false

- name: Force change password
  command: "chage -d 0 {{ user_dict.name }}"
  when:
  - getent_passwd[user_dict.name] == None
  - created_user.changed
  - user_dict.pw_lock is not defined or user_dict.pw_lock == false

- name: Lock password
  user:
    name: "{{ user_dict.name }}"
    password_lock: yes
  when:
  - user_dict.pw_lock is defined
  - user_dict.pw_lock == true

- name: Add authorized keys
  ansible.posix.authorized_key:
    user: "{{ user_dict.name }}"
    state: present
    key: "{{ item }}"
  loop: "{{ user_dict.public_keys }}"
  when:
  - user_dict.name is defined
  - user_dict.comment is defined
  - user_dict.public_keys is defined

- name: Dotfiles through chezmoi
  become: true
  become_user: "{{ user_dict.name }}"
  command: "chezmoi init --apply {{ user_dict.chezmoi_repository }} --guess-repo-url=false"
  when:
  - user_dict.chezmoi_repository is defined
