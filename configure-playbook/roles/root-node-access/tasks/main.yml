---

- name: Root user .ssh dir exists
  ansible.builtin.file:
    path: /root/.ssh
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Root user SSH Key exists
  community.crypto.openssh_keypair:
    comment: "root@catalog"
    path: /root/.ssh/id_ed25519
    type: ed25519
    owner: root
    group: root
    mode: '0600'
  run_once: true
  register: root_pair

- name: Read root user SSH Key
  ansible.builtin.slurp:
    src: /root/.ssh/id_ed25519
  run_once: true
  register: root_keyfile

- name: Sync root user SSH Key across nodes
  ansible.builtin.copy:
    content: '{{ root_keyfile.content | b64decode }}'
    dest: /root/.ssh/id_ed25519
    owner: root
    group: root
    mode: '0600'

- name: Permit root user SSH Key from catalog nodes only
  ansible.posix.authorized_key:
    user: root
    state: present
    key: "{{ root_pair.public_key }}"
    key_options: "from=\"{{ ansible_play_hosts_all | map('extract', hostvars, ['ansible_facts', 'default_ipv4', 'address']) | join(',') }}\""

- name: Add .internal hostnames for cluster
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[item].ansible_facts.default_ipv4.address }} {{ item.split('.')[0] if '.' in item else item }}.internal"
    state: present
  loop: "{{ ansible_play_hosts }}"

- name: Add host fingerprints to known_hosts
  ansible.builtin.known_hosts:
    name: "{{ item.split('.')[0] if '.' in item else item }}.internal"
    key: "{{ lookup('pipe', 'ssh-keyscan -t ed25519 ' + (item.split('.')[0] if '.' in item else item) + '.internal') }}"
    path: /root/.ssh/known_hosts
    state: present
  loop: "{{ ansible_play_hosts }}"

- name: Add .internal domain search to resolved
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: '^Domains='
    line: 'Domains=internal'
    state: present
  notify: restart resolved
