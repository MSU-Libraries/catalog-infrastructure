stages:
  - build
  - provision

Build Base Image:
  stage: build
  tags:
    - msul-docker
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  image: docker:19.03
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build  -t $CI_REGISTRY_IMAGE/ansible:latest --cache-from $CI_REGISTRY_IMAGE/ansible:latest .
    - docker push $CI_REGISTRY_IMAGE/ansible:latest

Provision:
  stage: provision
  tags:
    - msul-docker
  image: $CI_REGISTRY_IMAGE/ansible:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule" && $CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH'
  variables:
    TZ: America/Detroit
  before_script:
    # Setting up ssh key
    - eval $( ssh-agent -s )
    - echo "$ROOT_PRIVATE_KEY" | base64 -d | ssh-add -
    - install -d -m 700 ~/.ssh/
    - ( umask 022; touch ~/.ssh/known_hosts )
    - ssh-keyscan ansible.lib.msu.edu >> ~/.ssh/known_hosts
  script:
    # Clone the coreboot playbook
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.msu.edu/msu-libraries/systems/playbook-conditional-reboot configure-playbook/playbook-conditional-reboot
    # Run the playbook to provision
    - cat provision-playbook/variables.yml | envsubst | sponge provision-playbook/variables.yml
    - ansible-playbook provision-playbook/provision.yml
    # Run the Ubuntu setup playbook # TODO temporarily commenting out to speed up pipeline
    #- scp configure-playbook/hosts ubuntusetup@ansible.lib.msu.edu:/home/ubuntusetup/hosts
    #- ssh ubuntusetup@ansible.lib.msu.edu "sudo -Hu ansible /home/ubuntusetup/ubuntu-setup/add_host_keys /home/ubuntusetup/hosts"
    #- ssh ubuntusetup@ansible.lib.msu.edu "sudo -Hu ansible ansible-playbook -i /home/ubuntusetup/hosts /home/ubuntusetup/ubuntu-setup/runsetup.yml"
    # Run the configure playbook
    - apt install python3-dnspython -y
    - ansible-playbook configure-playbook/configure.yml -i configure-playbook/hosts
    - echo "Success! Servers are now accessible with the following IPs"
    - cat configure-playbook/hosts
